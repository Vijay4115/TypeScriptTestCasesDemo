// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Macth SnapShot 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  style={
    Object {
      "backgroundColor": "#131212",
      "flex": 2,
    }
  }
>
  <View
    style={
      Object {
        "marginTop": 66.7,
      }
    }
  >
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <Text
        style={
          Object {
            "color": "#58a6ff",
            "fontSize": 20,
            "fontWeight": "500",
          }
        }
        testID="Title"
      >
        facebook / react
      </Text>
    </View>
  </View>
  <View
    style={
      Object {
        "flexDirection": "row",
        "marginTop": 133.4,
      }
    }
  >
    <View
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <TextInput
        allowFontScaling={true}
        autoCapitalize="none"
        autoCorrect={false}
        onChangeText={[Function]}
        placeholder="is:issue is:open "
        placeholderTextColor="grey"
        rejectResponderTermination={true}
        style={
          Object {
            "borderColor": "#fff",
            "borderRadius": 5,
            "borderWidth": 1,
            "color": "#fff",
            "height": 53.36,
            "padding": 10,
            "paddingLeft": 15,
          }
        }
        testID="txt_search"
        underlineColorAndroid="transparent"
        value=""
      />
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "borderColor": "#fff",
          "borderRadius": 10,
          "borderWidth": 1,
          "flex": 0.2,
          "justifyContent": "center",
          "marginLeft": 5,
        }
      }
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "justifyContent": "center",
            "opacity": 1,
          }
        }
        testID="btn_search"
      >
        <Text
          style={
            Object {
              "color": "#fff",
            }
          }
        >
          Search
        </Text>
      </View>
    </View>
  </View>
  <View
    style={
      Object {
        "borderColor": "#fff",
        "borderRadius": 10,
        "borderWidth": 1,
        "margin": 15,
        "marginBottom": 200,
        "marginTop": 66.7,
      }
    }
  >
    <RCTScrollView
      data={Array []}
      disableVirtualization={false}
      getItem={[Function]}
      getItemCount={[Function]}
      horizontal={false}
      initialNumToRender={10}
      keyExtractor={[Function]}
      maxToRenderPerBatch={10}
      onContentSizeChange={[Function]}
      onEndReachedThreshold={2}
      onLayout={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={Array []}
      testID="flt_data"
      updateCellsBatchingPeriod={50}
      viewabilityConfigCallbackPairs={Array []}
      windowSize={21}
    >
      <View />
    </RCTScrollView>
  </View>
</RCTSafeAreaView>
`;
